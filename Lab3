Лабораторная работа №3


Тема: Анализ потоков данных мобильного приложения Telegram

Цель работы
Изучить архитектуру и потоки данных существующего мобильного приложения, определить передаваемые данные между клиентом и сервером, выявить основные операции и возможные пути улучшения.

Объект исследования
В качестве примера выбрано мобильное приложение Telegram — популярный мессенджер, использующий облачное хранение данных и протокол MTProto для передачи информации.

Анализ потоков данных
Основные процессы:
1. Аутентификация – передача номера телефона, получение кода подтверждения, верификация пользователя.
2. Отправка сообщений – клиент шифрует данные и передаёт их серверу, сервер доставляет адресату.
3. Синхронизация – периодическое получение новых сообщений, обновлений чатов, уведомлений.
4. Передача медиафайлов – загрузка и скачивание изображений, видео, документов через сервер.
5. Звонки – сервер помогает установить P2P-соединение, при необходимости выполняет ретрансляцию.

Передаваемые данные:
- От клиента к серверу: номер телефона, код подтверждения, сообщения, медиафайлы, запросы на обновления.
- От сервера к клиенту: коды подтверждения, ключи сессий, входящие сообщения, уведомления, медиафайлы.
 
Диаграмма потоков данных
Уровень 0 (контекстная диаграмма):

[Пользователь] ⇄ [Клиент Telegram] ⇄ [Сервер Telegram] ⇄ [Другой пользователь]


Уровень 1 (подробный поток):

Пользователь → (Авторизация) → Сервер Telegram → (Код подтверждения) → Пользователь
Пользователь → (Отправка сообщений) → Сервер → (Доставка сообщений) → Другой пользователь
Пользователь → (Загрузка медиа) → Сервер (Хранение файлов)
Другой пользователь → (Запрос медиа) → Сервер → (Файл) → Клиент
Пользователь ⇄ (Запрос обновлений) ⇄ Сервер ⇄ (Обновления) ⇄ Клиент
Пользователь ⇄ (Звонок) ⇄ Сервер ⇄ Другой пользователь

Возможные улучшения:
- Оптимизация загрузки и передачи медиа при слабом интернете (адаптивное сжатие).
- Внедрение дифференциальной синхронизации, чтобы уменьшить трафик при обновлении чатов.
- Улучшение качества звонков через алгоритмы шумоподавления.
- Возможность выбора пользователем: хранить сообщения только на устройстве или в облаке.

Выводы
В ходе работы был проведён анализ потоков данных приложения Telegram. Определены основные взаимодействия между клиентом и сервером, выделены ключевые операции: авторизация, передача сообщений и файлов, синхронизация данных, звонки. Построена диаграмма потоков данных (DFD) и предложены пути улучшения приложения.
